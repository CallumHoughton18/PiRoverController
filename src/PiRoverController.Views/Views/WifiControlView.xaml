<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:XamComponents="clr-namespace:PiRoverController.XamComponents;assembly=PiRoverController.XamComponents"
             xmlns:local="clr-namespace:PiRoverController.Views"
             xmlns:viewstyles="clr-namespace:PiRoverController.Views.Styles"
             x:Class="PiRoverController.Views.WifiControlView"
             Title="Rover Wifi Control"
             Style="{DynamicResource ContentPageStyle}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <viewstyles:MainStyle/>
            </ResourceDictionary.MergedDictionaries>
            <local:RoverConnectionToTextConverter x:Key="RoverConnToText"/>
            <local:RoverConnectionToColourConverter x:Key="RoverConnToColour" InProgressColor="{StaticResource InProgressColor}" FailureColor="{StaticResource FailColor}" SuccessColor="{StaticResource SuccessColor}"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Behaviors>
        <XamComponents:EventToCommandBehaviour EventName="Appearing" Command="{Binding OnAppearingCommand}"/>
    </ContentPage.Behaviors>
    <ContentPage.ToolbarItems>
        <ToolbarItem Icon="cog.png" Priority="0" Order="Primary" Command="{Binding GoToSettingsCommand}"/>
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.2*"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

                <Label Style="{DynamicResource HeadingTextStyle}" VerticalOptions="Center" HorizontalOptions="Start"
                       Text="{Binding RoverConnection,Converter={StaticResource RoverConnToText}}"  TextColor="{Binding RoverConnection,Converter= {StaticResource RoverConnToColour}}"  Margin="5,0"/>
            <Button Command="{Binding CheckRoverConnectionCommand}" Style="{DynamicResource SyncButtonStyle}" Pressed="Animate_Sync_Button" VerticalOptions="CenterAndExpand" HorizontalOptions="End" Margin="5,0" ></Button>
           
            <Grid Grid.Row="1" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.7*"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="1.7*"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="1.7*"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="1.7*"></RowDefinition>
                    <RowDefinition Height="1.7*"></RowDefinition>
                    <RowDefinition Height="1.7*"></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>


                <ImageButton Style="{DynamicResource ArrowImageButtonStyle}" Rotation="180" x:Name="ForwardArrow" Grid.Row="1" Grid.Column="4">
                    <ImageButton.Behaviors>
                        <XamComponents:EventToCommandBehaviour EventName="Pressed" Command="{Binding GoForwardsCommand}"></XamComponents:EventToCommandBehaviour>
                        <XamComponents:EventToCommandBehaviour EventName="Released" Command="{Binding StopForwardsAndBackwardCommand}"></XamComponents:EventToCommandBehaviour>
                    </ImageButton.Behaviors>
                </ImageButton>

                <ImageButton Style="{DynamicResource ArrowImageButtonStyle}" x:Name="BackwardArrow" Grid.Row="3" Grid.Column="4">
                    <ImageButton.Behaviors>
                        <XamComponents:EventToCommandBehaviour EventName="Pressed" Command="{Binding GoBackwardsCommand}"></XamComponents:EventToCommandBehaviour>
                        <XamComponents:EventToCommandBehaviour EventName="Released" Command="{Binding StopForwardsAndBackwardCommand}"></XamComponents:EventToCommandBehaviour>
                    </ImageButton.Behaviors>
                </ImageButton>

                <ImageButton Style="{DynamicResource ArrowImageButtonStyle}" Rotation="90" x:Name="LeftArrow" Grid.Row="2">
                        <ImageButton.Behaviors>
                            <XamComponents:EventToCommandBehaviour EventName="Pressed" Command="{Binding GoLeftCommand}"></XamComponents:EventToCommandBehaviour>
                        </ImageButton.Behaviors>
                    </ImageButton>

                    <ImageButton Style="{DynamicResource ArrowImageButtonStyle}" Rotation="270" x:Name="RightArrow" Grid.Row="2" Grid.Column="2">
                        <ImageButton.Behaviors>
                            <XamComponents:EventToCommandBehaviour EventName="Pressed" Command="{Binding GoRightCommand}"></XamComponents:EventToCommandBehaviour>
                        </ImageButton.Behaviors>
                    </ImageButton>

            </Grid>

            <XamComponents:ProgressToast ProgressToastText="{Binding LoadingMessage}" DisplayToast="{Binding LoadingData}"
                                         Style="{DynamicResource ProgressToastStyle}" InputTransparent="True"
                                         Grid.Row="1" VerticalOptions="End" HorizontalOptions="Fill"/>
        </Grid>
    </ContentPage.Content>
</ContentPage>